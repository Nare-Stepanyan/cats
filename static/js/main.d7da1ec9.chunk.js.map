{"version":3,"sources":["actions/actionTypes.js","requests/index.js","actions/index.js","components/Category.js","components/Sidebar.js","components/Image.js","components/Main.js","App.js","reportWebVitals.js","reducers/categoryReducer.js","reducers/imagesReducer.js","reducers/index.js","store/index.js","index.js"],"names":["GET_CATEGORIES","GET_IMAGES","request","url","method","body","config","headers","JSON","stringify","fetch","then","res","json","response","error","getImages","params","query","key","value","newQuery","slice","dispatch","type","payload","catch","err","message","OneCategory","styled","button","mapDispatchToProps","connect","state","imageReducer","name","id","onClick","limit","page","category_ids","SidebarWrapper","div","getCategories","categories","categoryReducer","props","useEffect","categoryList","map","el","ImageBox","Image","src","alt","MainWrapper","ImageList","LoadMore","ChooseCategory","images","imgList","length","newParams","href","Wrapper","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","action","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAAaA,EAAiB,iBACjBC,EAAa,aCkBXC,I,EAAAA,EAnBf,SAAiBC,GAA4B,IAAvBC,EAAsB,uDAAb,MAAOC,EAAM,uCACpCC,EAAS,CACbF,OAAQA,EACRG,QAAS,CACP,eAAgB,qBAMpB,OAHIF,IACFC,EAAOD,KAAOG,KAAKC,UAAUJ,IAExBK,MAAMP,EAAKG,GACfK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,GAAIA,EAASC,MACX,MAAMD,EAASC,MAEjB,OAAOD,MCAAE,EAAY,WAAkB,IAAjBC,EAAgB,uDAAP,GAC7Bd,EAAG,8CACHe,EAAQ,GAEZ,IAAK,IAAIC,KAAOF,EAAQ,CACtB,IAAIG,EAAQH,EAAOE,GACnBD,EAAK,UAAMA,GAAN,OAAcC,EAAd,YAAqBC,EAArB,KAGP,IAAMC,EAAWH,EAAMI,MAAM,GAAI,GACjC,OAAO,SAACC,GACNrB,EAAQC,EAAMkB,GACXV,MAAK,SAACC,GACLW,EAAS,CAAEC,KAAMvB,EAAYwB,QAASb,OAEvCc,OAAM,SAACC,GACNJ,EAAS,CAAER,MAAOY,EAAIC,e,OCf9B,I,EAAMC,EAAcC,IAAOC,OAAV,kRAqBXC,EAAqB,CACzBhB,aAEaiB,eATS,SAACC,GACvB,MAAO,CACLjB,OAAQiB,EAAMC,aAAalB,UAOSe,EAAzBC,EApCf,YAAoD,IAAhCG,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,GAAYrB,GAAa,EAArBC,OAAqB,EAAbD,WASpC,OAAO,cAACa,EAAD,CAAaS,QARA,WAMlBtB,EALS,CACPuB,MAAO,GACPC,KAAM,EACNC,aAAcJ,KAIX,SAAoCD,OCK7C,I,EAAMM,EAAiBZ,IAAOa,IAAV,kTAiBdX,EAAqB,CACzBY,cFlC2B,WAE3B,OAAO,SAACrB,GACNrB,EAFkB,2CAGfS,MAAK,SAACC,GACLW,EAAS,CAAEC,KAAMxB,EAAgByB,QAASb,OAE3Cc,OAAM,SAACC,GACNJ,EAAS,CAAER,MAAOY,EAAIC,gBE6BfK,eAVS,SAACC,GACvB,MAAO,CACLW,WAAYX,EAAMY,gBAAgBD,cAQEb,EAAzBC,EAlCf,SAAiBc,GACf,IAAQF,EAAeE,EAAfF,WACRG,qBAAU,WACRD,EAAMH,kBAEL,IAEH,IAAIK,EAAeJ,EAAWK,KAAI,SAACC,GACjC,OAAO,cAAC,EAAD,CAAsBf,KAAMe,EAAGf,KAAMC,GAAIc,EAAGd,IAA7Bc,EAAGd,OAE3B,OAAO,cAACK,EAAD,UAAiBO,OCL1B,I,QAAMG,EAAWtB,IAAOa,IAAV,2JAWCU,EAnBf,YAAyB,IAARlD,EAAO,EAAPA,IACf,OACE,cAACiD,EAAD,UACE,qBAAKE,IAAKnD,EAAKoD,IAAI,WCiCzB,I,EAAMC,EAAc1B,IAAOa,IAAV,gSAUXc,EAAY3B,IAAOa,IAAV,oGAMTe,EAAW5B,IAAOa,IAAV,q6BA+CRgB,EAAiB7B,IAAOa,IAAV,0JAgBdX,EAAqB,CACzBhB,aAGaiB,eAXS,SAACC,GACvB,MAAO,CACL0B,OAAQ1B,EAAMC,aAAayB,OAC3B3C,OAAQiB,EAAMC,aAAalB,UAQSe,EAAzBC,EApHf,SAAcc,GACZ,IAAQa,EAA8Bb,EAA9Ba,OAAQ5C,EAAsB+B,EAAtB/B,UAAWC,EAAW8B,EAAX9B,OAWrB4C,EAAUD,EAAOV,KAAI,SAACC,GAC1B,OAAO,cAAC,EAAD,CAAmBhD,IAAKgD,EAAGhD,KAAfgD,EAAGd,OAExB,OACE,cAACmB,EAAD,UACGK,EAAQC,OAAS,EAChB,qCACE,cAACL,EAAD,UAAYI,IACZ,cAACH,EAAD,CAAUpB,QAjBE,WAClB,IAAMyB,EAAY,CAChBxB,MAAOtB,EAAOsB,MAAQ,GACtBC,KAAMvB,EAAOuB,KAAO,EACpBH,GAAIpB,EAAOoB,IAEbrB,EAAU+C,IAWJ,SACE,mBAAGC,KAAK,IAAR,uBAIJ,cAACL,EAAD,UACE,iECnBV,IAAMM,EAAUnC,IAAOa,IAAV,+HAMEuB,EAff,WACE,OACE,eAACD,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1D,MAAK,YAAkD,IAA/C2D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,sBCNRO,EAAY,CAChB9B,WAAY,IAeCC,EAZS,WAAgC,IAA/BZ,EAA8B,uDAAtByC,EAAWC,EAAW,uCACrD,OAAQA,EAAOpD,MACb,KAAKxB,EACH,OAAO,2BACFkC,GADL,IAEEW,WAAY+B,EAAOnD,UAEvB,QACE,OAAOS,I,QCZPyC,EAAY,CAChBf,OAAQ,GACR3C,OAAQ,CACNsB,MAAO,GACPC,KAAM,EACNC,aAAc,OAgBHN,EAZM,WAAgC,IAA/BD,EAA8B,uDAAtByC,EAAWC,EAAW,uCAClD,OAAQA,EAAOpD,MACb,KAAKvB,EACH,OAAO,2BACFiC,GADL,IAEE0B,OAAO,YAAKgB,EAAOnD,WAEvB,QACE,OAAOS,ICTE2C,EALKC,YAAgB,CAClChC,gBAAiBA,EACjBX,aAAcA,ICAD4C,EAFDC,YAAYH,EAAaI,YAAgBC,MCIvDC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAFJ,OAMAO,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.d7da1ec9.chunk.js","sourcesContent":["export const GET_CATEGORIES = \"GET_CATEGORIES\";\nexport const GET_IMAGES = \"GET_IMAGES\";\n","function request(url, method = \"GET\", body) {\n  const config = {\n    method: method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  if (body) {\n    config.body = JSON.stringify(body);\n  }\n  return fetch(url, config)\n    .then((res) => res.json())\n    .then((response) => {\n      if (response.error) {\n        throw response.error;\n      }\n      return response;\n    });\n}\nexport default request;\n","import { GET_CATEGORIES, GET_IMAGES } from \"./actionTypes\";\nimport request from \"./../requests/index\";\n\nexport const getCategories = () => {\n  const categoryUrl = \"https://api.thecatapi.com/v1/categories\";\n  return (dispatch) => {\n    request(categoryUrl)\n      .then((res) => {\n        dispatch({ type: GET_CATEGORIES, payload: res });\n      })\n      .catch((err) => {\n        dispatch({ error: err.message });\n      });\n  };\n};\n\nexport const getImages = (params = {}) => {\n  let url = `https://api.thecatapi.com/v1/images/search?`;\n  let query = \"\";\n\n  for (let key in params) {\n    let value = params[key];\n    query = `${query}${key}=${value}&`;\n  }\n\n  const newQuery = query.slice(0, -1);\n  return (dispatch) => {\n    request(url + newQuery)\n      .then((res) => {\n        dispatch({ type: GET_IMAGES, payload: res });\n      })\n      .catch((err) => {\n        dispatch({ error: err.message });\n      });\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { getImages } from \"./../actions/index\";\n\nfunction Category({ name, id, params, getImages }) {\n  const handleClick = () => {\n    params = {\n      limit: 10,\n      page: 1,\n      category_ids: id,\n    };\n    getImages(params);\n  };\n  return <OneCategory onClick={handleClick}>{name}</OneCategory>;\n}\n\nconst OneCategory = styled.button`\n  width: 100%;\n  text-align: center;\n  font-size: 20px;\n  padding: 10px;\n  border: 1px solid #ffffff;\n  border-radius: 5px;\n  background-color: #008eb2;\n  color: #fff;\n  cursor: pointer;\n  &:hover {\n    background-color: #005166;\n  }\n`;\n\nconst mapStateToProps = (state) => {\n  return {\n    params: state.imageReducer.params,\n  };\n};\n\nconst mapDispatchToProps = {\n  getImages,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Category);\n","import styled from \"styled-components\";\nimport Category from \"./Category\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCategories } from \"./../actions/index\";\n\nfunction Sidebar(props) {\n  const { categories } = props;\n  useEffect(() => {\n    props.getCategories();\n    // eslint-disable-next-line\n  }, []);\n\n  let categoryList = categories.map((el) => {\n    return <Category key={el.id} name={el.name} id={el.id} />;\n  });\n  return <SidebarWrapper>{categoryList}</SidebarWrapper>;\n}\n\nconst SidebarWrapper = styled.div`\n  width: 25%;\n  padding: 20px;\n  border: 1px solid lightgrey;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15), 0 2px 2px rgba(0, 0, 0, 0.15),\n    0 4px 4px rgba(0, 0, 0, 0.15), 0 4px 4px rgba(0, 0, 0, 0.15);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst mapStateToProps = (state) => {\n  return {\n    categories: state.categoryReducer.categories,\n  };\n};\n\nconst mapDispatchToProps = {\n  getCategories,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction Image({ url }) {\n  return (\n    <ImageBox>\n      <img src={url} alt=\"img\" />\n    </ImageBox>\n  );\n}\n\nconst ImageBox = styled.div`\n  width: 250px;\n  height: 200px;\n  padding: 10px;\n  text-align: center;\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport default Image;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Image from \"./Image\";\nimport { getImages } from \"./../actions/index\";\nimport { connect } from \"react-redux\";\n\nfunction Main(props) {\n  const { images, getImages, params } = props;\n\n  const handleClick = () => {\n    const newParams = {\n      limit: params.limit + 10,\n      page: params.page + 1,\n      id: params.id,\n    };\n    getImages(newParams);\n  };\n\n  const imgList = images.map((el) => {\n    return <Image key={el.id} url={el.url} />;\n  });\n  return (\n    <MainWrapper>\n      {imgList.length > 0 ? (\n        <>\n          <ImageList>{imgList}</ImageList>\n          <LoadMore onClick={handleClick}>\n            <a href=\"#\">More</a>\n          </LoadMore>\n        </>\n      ) : (\n        <ChooseCategory>\n          <h2> Choose from categories!</h2>\n        </ChooseCategory>\n      )}\n    </MainWrapper>\n  );\n}\n\nconst MainWrapper = styled.div`\n  width: 70%;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid lightgrey;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.15), 0 2px 2px rgba(0, 0, 0, 0.15),\n    0 4px 4px rgba(0, 0, 0, 0.15), 0 4px 4px rgba(0, 0, 0, 0.15);\n`;\n\nconst ImageList = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n`;\n\nconst LoadMore = styled.div`\n  margin: 0 auto;\n  a {\n    display: inline-block;\n    padding: 0.75rem 1.25rem;\n    border-radius: 10rem;\n    color: #fff;\n    font-size: 14px;\n    letter-spacing: 0.15rem;\n    transition: all 0.3s;\n    position: relative;\n    overflow: hidden;\n    z-index: 1;\n    font-family: Arial;\n    text-decoration: none;\n    &:after {\n      content: \"\";\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: #008eb2;\n      border-radius: 10rem;\n      z-index: -2;\n    }\n    &:before {\n      content: \"\";\n      position: absolute;\n      bottom: 0;\n      left: 0;\n      width: 0%;\n      height: 100%;\n      background-color: #005166;\n      transition: all 0.3s;\n      border-radius: 10rem;\n      z-index: -1;\n    }\n    &:hover {\n      color: #fff;\n      &:before {\n        width: 100%;\n      }\n    }\n  }\n`;\n\nconst ChooseCategory = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  h2 {\n    margin: 100px auto;\n    color: grey;\n  }\n`;\nconst mapStateToProps = (state) => {\n  return {\n    images: state.imageReducer.images,\n    params: state.imageReducer.params,\n  };\n};\n\nconst mapDispatchToProps = {\n  getImages,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import styled from \"styled-components\";\nimport Sidebar from \"./components/Sidebar\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Sidebar />\n      <Main />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 20px;\n`;\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_CATEGORIES } from \"../actions/actionTypes\";\nconst initState = {\n  categories: [],\n};\n\nconst categoryReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GET_CATEGORIES:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default categoryReducer;\n","import { GET_IMAGES } from \"./../actions/actionTypes\";\nconst initState = {\n  images: [],\n  params: {\n    limit: 10,\n    page: 1,\n    category_ids: null,\n  },\n};\n\nconst imageReducer = (state = initState, action) => {\n  switch (action.type) {\n    case GET_IMAGES:\n      return {\n        ...state,\n        images: [...action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default imageReducer;\n","import { combineReducers } from \"redux\";\nimport categoryReducer from \"./categoryReducer\";\nimport imageReducer from \"./imagesReducer\";\n\nconst rootReducer = combineReducers({\n  categoryReducer: categoryReducer,\n  imageReducer: imageReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducer from \"./../reducers/index\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    ,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}